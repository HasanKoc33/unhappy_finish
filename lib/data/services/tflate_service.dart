import 'package:sleep/core/constants/app_assets.dart';import 'package:sleep/data/models/data.dart';import 'package:tflite_flutter/tflite_flutter.dart';class TfliteService {  TfliteService._();  static TfliteService? _instance;  static TfliteService get instance => _instance ??= TfliteService._();  late final _interpreter;  void init() async {    _interpreter = await Interpreter.fromAsset(AppAsets.tflateModel.value);  }  Future<int> run(List<Data> input) async {    if(input.isEmpty){      return 0;    }    print('TfliteService.run');    var inputs = input.map((e) => [e.x,e.y,e.z]).toList();    for(var i = 0; i < inputs.length; i++){      if(inputs[i].length < 3){        inputs[i]=List<double>.filled(3 , 0.0);      }    }    print(inputs);    var output = List<List<double>>.generate(inputs.length, (_) => [0.0]);    _interpreter.run(inputs, output);    final responseList = <int>[];    for(var i = 0; i < output.length; i++){      if(output[i][0] > 0.8){        responseList.add(1);      }else{        responseList.add(0);      }    }    print(responseList);    final hatali = _hataliHareketSayisi(responseList);    print(hatali);   return hatali;  }  int _hataliHareketSayisi(List<int> inputList) {    int counter = 0; // 15'lik 1 gruplarını saymak için    int consecutiveOnes = 0; // Arka arkaya gelen 1'leri saymak için    for (int number in inputList) {      if (number == 1) {        consecutiveOnes++; // 1 gördükçe sayıyı artır        if (consecutiveOnes == 15) { // Eğer 15'e ulaşırsak          counter++; // Sayaç değerini artır          consecutiveOnes = 0; // Yeniden saymaya başla        }      } else {        consecutiveOnes = 0; // 0 gördüğümüzde ardışıklık sıfırlanır      }    }    return counter;  }}