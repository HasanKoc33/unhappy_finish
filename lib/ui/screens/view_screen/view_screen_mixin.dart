import 'package:flutter/material.dart';import 'package:flutter_cube/flutter_cube.dart';import 'package:sleep/core/constants/app_assets.dart';import 'package:sleep/ui/screens/view_screen/view_screen.dart';/// ViewScreen mixin sınıfımixin ViewScreenMixin on State<ViewScreen> {  Object? leftHandObject;  Object? rightHandObject;  Object? humanObject;  Scene? scene;  Vector3 minHandPosition = Vector3(-2, -2, 0);  Vector3 maxHandPosition = Vector3(2, 2, 0);  double roll = 45.311893;  double pitch = 67.96784;  double yaw = -110.311893;  // vicudu ters çevir  Future<void> humanFrontRotation() async {    humanObject!.rotation.x = 0;    humanObject!.updateTransform();    scene?.update();    return;    if(  humanObject!.rotation.x == 0 ) return;    for (double i = 180; i >= 0 ; i -= 10) {      humanObject!.rotation.x = i;      humanObject!.updateTransform();      scene?.update();      print(i);      await Future.delayed(const Duration(milliseconds: 5), () {});    }  }  Future<void> humanBackRotation() async {    humanObject!.rotation.x = 180;    humanObject!.updateTransform();    scene?.update();    return;    if(  humanObject!.rotation.x == 180 ) return;    for (double i = 0; i <= 180; i += 10) {      humanObject!.rotation.x = i;      humanObject!.updateTransform();      scene?.update();      print(i);      await Future.delayed(const Duration(milliseconds: 5), () {});    }  }  void sahne(Scene scene) {    scene = scene;    leftHandObject = Object(      fileName: AppAsets.handL.value,      scale: Vector3(11,11,11),      position: Vector3(20, -25, 0),      rotation: Vector3(90, 180, 0),      lighting: true,    );    rightHandObject = Object(      fileName: AppAsets.handR.value,      scale: Vector3(9,10,9),      position: Vector3(10, -25, 0),      rotation: Vector3(0, 90, -90),      lighting: true,    );    humanObject = Object(      fileName: AppAsets.humanBody.value,      name: 'human',      isAsset: true,      position: Vector3(0, 0, 1),      rotation: Vector3(0, 200, 90),      scale: Vector3(200, 200, 200),      lighting: true,      backfaceCulling: true,    );    scene.world.add(humanObject!);    scene.world.add(leftHandObject!);    scene.world.add(rightHandObject!);    scene.camera.zoom = 1;    scene.camera.position.setValues(0, 0, -130);    scene.camera.target.setValues(50, 0.0, 0.0);    scene.light.position.setValues(20.0, 1.0, -50.0);  }  void updateLeftHandRotation(String strValue) {    List<String> values = strValue.split('*');    if (values.length == 3) {      final roll = double.parse(values[0]);      final pitch = double.parse(values[1]);      final yaw = double.parse(values[2]);      leftHandObject!.position.setValues(pitch, roll, yaw);      leftHandObject!.updateTransform();      scene?.update();    }  }  void updateRightHandRotation(String strValue) {    List<String> values = strValue.split('*');    if (values.length == 3) {      final roll = double.parse(values[0]);      final pitch = double.parse(values[1]);      final yaw = double.parse(values[2]);      rightHandObject!.position.setValues(pitch, roll, yaw);      rightHandObject!.updateTransform();      scene?.update();    }  }}